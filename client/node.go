// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/apiarian/ipfs-pinbase/design
// --out=$(GOPATH)/src/github.com/apiarian/ipfs-pinbase
// --version=v1.1.0-dirty
//
// API "pinbase": node Resource Client
//
// The content of this file is auto-generated, DO NOT MODIFY

package client

import (
	"fmt"
	"golang.org/x/net/context"
	"net/http"
	"net/url"
)

// ShowNodePath computes a request path to the show action of node.
func ShowNodePath(nodeHash string) string {
	param0 := nodeHash

	return fmt.Sprintf("/nodes/%s", param0)
}

// Get node by hash
func (c *Client) ShowNode(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewShowNodeRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewShowNodeRequest create the request corresponding to the show action endpoint of the node resource.
func (c *Client) NewShowNodeRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
