// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/apiarian/ipfs-pinbase/cmd/ipfs-pinbase/design
// --out=$(GOPATH)/src/github.com/apiarian/ipfs-pinbase/cmd/ipfs-pinbase
// --version=v1.1.0-dirty
//
// API "pinbase": Application User Types
//
// The content of this file is auto-generated, DO NOT MODIFY

package client

// partyCreatePayload user type.
type partyCreatePayload struct {
	// A helpful description of the party
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// The hash of the object describing the party
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// Publicize creates PartyCreatePayload from partyCreatePayload
func (ut *partyCreatePayload) Publicize() *PartyCreatePayload {
	var pub PartyCreatePayload
	if ut.Description != nil {
		pub.Description = ut.Description
	}
	if ut.Hash != nil {
		pub.Hash = ut.Hash
	}
	return &pub
}

// PartyCreatePayload user type.
type PartyCreatePayload struct {
	// A helpful description of the party
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// The hash of the object describing the party
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// partyUpdatePayload user type.
type partyUpdatePayload struct {
	// A helpful description of the party
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// Publicize creates PartyUpdatePayload from partyUpdatePayload
func (ut *partyUpdatePayload) Publicize() *PartyUpdatePayload {
	var pub PartyUpdatePayload
	if ut.Description != nil {
		pub.Description = ut.Description
	}
	return &pub
}

// PartyUpdatePayload user type.
type PartyUpdatePayload struct {
	// A helpful description of the party
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// pinCreatePayload user type.
type pinCreatePayload struct {
	// Aliases for the pinned object
	Aliases []string `form:"aliases,omitempty" json:"aliases,omitempty" xml:"aliases,omitempty"`
	// The hash of the object to be pinned
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
	// Indicates that the party wants to actually pin the object
	WantPinned *bool `form:"want-pinned,omitempty" json:"want-pinned,omitempty" xml:"want-pinned,omitempty"`
}

// Publicize creates PinCreatePayload from pinCreatePayload
func (ut *pinCreatePayload) Publicize() *PinCreatePayload {
	var pub PinCreatePayload
	if ut.Aliases != nil {
		pub.Aliases = ut.Aliases
	}
	if ut.Hash != nil {
		pub.Hash = ut.Hash
	}
	if ut.WantPinned != nil {
		pub.WantPinned = ut.WantPinned
	}
	return &pub
}

// PinCreatePayload user type.
type PinCreatePayload struct {
	// Aliases for the pinned object
	Aliases []string `form:"aliases,omitempty" json:"aliases,omitempty" xml:"aliases,omitempty"`
	// The hash of the object to be pinned
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
	// Indicates that the party wants to actually pin the object
	WantPinned *bool `form:"want-pinned,omitempty" json:"want-pinned,omitempty" xml:"want-pinned,omitempty"`
}

// pinUpdatePayload user type.
type pinUpdatePayload struct {
	// Aliases for the pinned object
	Aliases []string `form:"aliases,omitempty" json:"aliases,omitempty" xml:"aliases,omitempty"`
	// Indicates that the party wants to actually pin the object
	WantPinned *bool `form:"want-pinned,omitempty" json:"want-pinned,omitempty" xml:"want-pinned,omitempty"`
}

// Publicize creates PinUpdatePayload from pinUpdatePayload
func (ut *pinUpdatePayload) Publicize() *PinUpdatePayload {
	var pub PinUpdatePayload
	if ut.Aliases != nil {
		pub.Aliases = ut.Aliases
	}
	if ut.WantPinned != nil {
		pub.WantPinned = ut.WantPinned
	}
	return &pub
}

// PinUpdatePayload user type.
type PinUpdatePayload struct {
	// Aliases for the pinned object
	Aliases []string `form:"aliases,omitempty" json:"aliases,omitempty" xml:"aliases,omitempty"`
	// Indicates that the party wants to actually pin the object
	WantPinned *bool `form:"want-pinned,omitempty" json:"want-pinned,omitempty" xml:"want-pinned,omitempty"`
}
